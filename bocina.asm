RADIX	DEC					; SET DECIMAL AS DEFAULT BASE
		PROCESSOR	18F45K50		; SET PROCESSOR TYPE
		#INCLUDE	<P18F45K50.INC>
;
;	VARIABLE'S DEFINITION SECTION
;
variable1	 EQU	0;
variable2	 EQU	7;
var_TMR0H    EQU    0x10;
var_TMR0L    EQU    0x11;
COUNTER      EQU    0X12;
CHAR         EQU    0X13;
LCD_NO_VISIBLE EQU  0x14;
LCD_EN       EQU    2
LCD_RS       EQU    0
LCD_RW       EQU    1
;	*** ONLY NEEDED FOR SOFTWARE SIMULATION ***
		ORG		0					; RESET VECTOR
		GOTO	0X1000
;
		ORG		0X08				; HIGH INTERRUPT VECTOR
		GOTO	0X1008
;
		ORG		0X18				; LOW INTERRUPT VECTOR
		GOTO	0X1018
;
;	*** END OF CODE FOR SOFTWARE SIMULATION ***
;	*** START OF PROGRAM ***
;	JUMP VECTORS
		ORG		0X1000				; RESET VECTOR
		GOTO	MAIN
;
		ORG		0X1008				; HIGH INTERRUPT VECTOR
		GOTO	ISR_HIGH			; UNCOMMENT WHEN NEEDED
;
;		ORG		0X1018				; LOW INTERRUPT VECTOR
;		GOTO	ISR_LOW				; UNCOMMENT WHEN NEEDED
;	RESOURCE INITIALIZATION
MAIN:
    ;; INICIOCONFIGURACION DE ENTRADAS Y SALIDAS DEL PIC
    MOVLB   15
    CLRF ANSELC, BANKED				; SET ALL PINS AS DIGITAL
    CLRF ANSELA, BANKED				; SET ALL PINS AS DIGITAL
    CLRF ANSELB, BANKED				; SET ALL PINS AS DIGITAL
    CLRF ANSELD, BANKED				; SET ALL PINS AS DIGITAL
    CLRF ANSELE, BANKED				; SET ALL PINS AS DIGITAL
    MOVLW 0X0F;
    MOVWF TRISB;
    CLRF TRISD; SALIDA DE LA LCD
    CLRF LATD;
    CLRF TRISE
    CLRF LATE
    BCF INTCON2, RBPU
    BSF TRISC,1 ;BOTON1
    BCF TRISA, 3;  ALIMENTAR LA BOCINA;
    BSF LATA, 3;   ALIMENTAR LA BOCINA;
    BSF TRISA, 2;  ENTRADA QUE RECIBE EL PWM;
    BCF TRISA, 1;  SALIDA DEL VOLTAJE A LA BOCINA;
    BCF TRISC, 2 ; SALIDA DEL VALOR DEL PWM (PARA LA FRECUENCIA DEL PWM);
    ;;FIN CONFIGURACION DE ENTRADAS Y SALIDAS DEL PIC
    ;;inicio configuración de pwm con pot
    BSF TRISA, 0
    BCF PMD1,ADCMD
    CLRF ADCON1
    BSF ADCON0, 0; PRENDER ADC
    BSF ADCON0, 1; EMPIEZA LA CONVERSION
    BCF ADCON2, ADFM;
    BSF T2CON, 2 ; TIMER ON
    BSF CCP1CON,3
    BSF CCP1CON,2
    ;;fin configuración de pwm con pot
    ;;inicio de configurar timer0
    MOVLW 0X18; no activo
    MOVWF T0CON
    MOVLW 0X32
    MOVWF T1CON
    ;;fin  de configurar  timer0
    ;; inicio de configurar intcon con timer0
    BCF INTCON,7 ; interrupcion de alta prioridad
    BCF INTCON,6 ;PEIE/GIEL: Peripheral Interrupt Enable bit
    BSF INTCON,5 ;TMR0 Overflow Interrupt Enable bit
    BCF INTCON,4 ; INT0 External Interrupt Enable bit, no hay int externas
    BSF INTCON,2 ;bandera de interrupcion OV timer0
    BCF INTCON,1 ;INT0 External Interrupt Flag bit
    ;; fin de configurar intcon con timer0
    ;;;LCD
    bsf PORTE,LCD_EN ; EN = 1
    bcf PORTE,LCD_RS ; RS = 0
    movlw 0x38 ; 8-bit interface, character de 5x8
    movwf PORTD
    bcf PORTE,LCD_EN ; EN = 0
    CALL DELAY
    bsf PORTE,LCD_EN ; EN = 1
    bcf PORTE,LCD_RS ; RS = 0
    movlw 0x38 ; 8-bit interface, character de 5x8
    movwf PORTD
    bcf PORTE,LCD_EN ; EN = 0
    CALL DELAY
    bsf PORTE,LCD_EN ; EN = 1
    bcf PORTE,LCD_RS ; RS = 0
    movlw 0x0F ; LCD ON, Cursor ON
    movwf PORTD
    bcf PORTE,LCD_EN ; EN = 0
    call DELAY
    ;; mover el cursor
    bsf PORTE,LCD_EN ; EN = 1
    bcf PORTE,LCD_RS ; RS = 0
    movlw 0x02 ; cursor at home
    movwf PORTD
    bcf PORTE,LCD_EN ; EN = 0
    call DELAY
    bsf PORTE,LCD_EN ; EN = 1
    bcf PORTE,LCD_RS ; RS = 0
    movlw 0x01 ; cursor at home
    movwf PORTD
    bcf PORTE,LCD_EN ; EN = 0
    call DELAY
    MOVLW 0x12;
    MOVWF LCD_NO_VISIBLE;
    MOVLW 0x19;
    MOVWF SPBRG1;
    CLRF SPBRGH1;
    CLRF BAUDCON1;
    BSF RCSTA1, SPEN;
    BCF TXSTA1, SYNC;
    BSF TRISC, 6;
    BSF TRISC, 7;
    BSF TXSTA1, TXEN;
    BSF RCSTA1, CREN;
LOOP:
    BCF LATA,1;
    BCF LATB,4;
    BSF LATB,5;
    BSF LATB,6;
    BSF LATB,7;
    BTFSS PORTB, 0;
        CALL NOTA_DO;
    BTFSS PORTB, 1;
        CALL NOTA_MI;
    BTFSS PORTB, 2;
        CALL NOTA_SOL_SOSTENIDO;
    BTFSS PORTB, 3;
        CALL NOTA_DO_MAYOR;
    BSF LATB,4;
    BCF LATB,5;
    BSF LATB,6;
    BSF LATB,7;
    BTFSS PORTB, 0;
        CALL NOTA_DO_SOSTENIDO;
    BTFSS PORTB, 1;
        CALL NOTA_FA;
    BTFSS PORTB, 2;
        CALL NOTA_LA;
    BTFSS PORTB, 3;
       CALL NOTA_RE_MAYOR;
    BSF LATB,4
    BSF LATB,5
    BCF LATB,6
    BSF LATB,7
    BTFSS PORTB, 0;
        CALL NOTA_RE;
    BTFSS PORTB, 1;
        CALL NOTA_FA_SOSTENIDO;
    BTFSS PORTB, 2;
        CALL NOTA_LA_SOSTENIDO;
    BTFSS PORTB, 3;
        CALL NOTA_MI_MAYOR;
    BSF LATB,4
    BSF LATB,5
    BSF LATB,6
    BCF LATB,7
    BTFSS PORTB, 0;
        CALL NOTA_RE_SOSTENIDO;
    BTFSS PORTB, 1;
        CALL NOTA_SOL;
    BTFSS PORTB, 2;
        CALL NOTA_SI;
    BTFSS PORTB, 3;
        CALL NOTA_FA_MAYOR;
    BTFSC PIR1, RCIF;
        CALL SERIAL;
GOTO LOOP
SERIAL:
    TCL_1:
        MOVLW 0x31;
        CPFSEQ RCREG1;
            GOTO TCL_2;
        CALL ALEGRIA_SONG_1;
    TCL_2:
        MOVLW 0x32;
        CPFSEQ RCREG1;
            GOTO TCL_3;
        CALL ALEGRIA_SONG_2;
   TCL_3:
        MOVLW 0x33;
        CPFSEQ RCREG1;
            GOTO TCL_4;
        CALL ALEGRIA_SONG_3;
    TCL_4:
        MOVLW 0x34;
        CPFSEQ RCREG1;
            GOTO TCL_5;
        CALL ALEGRIA_SONG_4;
    TCL_5:
        MOVLW 0x35;
        CPFSEQ RCREG1;
            GOTO TCL_6;
        CALL ALEGRIA_SONG_5;
    TCL_6:
        MOVLW 0x36;
        CPFSEQ RCREG1;
            GOTO TCL_7;
        CALL ALEGRIA_SONG_6;
    TCL_7:
        MOVLW 0x37;
        CPFSEQ RCREG1;
            GOTO TCL_8;
        CALL ALEGRIA_SONG_7;
    TCL_8:
        MOVLW 0x38;
        CPFSEQ RCREG1;
            GOTO UNVALID_VALUE;
        CALL ALEGRIA_SONG_8;
   UNVALID_VALUE:
        BCF PIR1, RCIF;
RETURN;
ISR_HIGH:
    BCF INTCON, GIE;
    BTFSC INTCON, 2;
        CALL TIMER0;
    BSF INTCON, GIE;
RETFIE FAST;
CONFIG_TIMERS:
    MOVLW 0X03;
    MOVWF COUNTER;
    BSF INTCON, GIE;
    BSF T0CON, TMR0ON;
    BSF T1CON, TMR1ON;
    CALL TIMER1
    CALL SONIDO;
    BCF T0CON, TMR0ON;
    BCF INTCON, GIE;
    BCF LATA,1;
RETURN
NOTA_DO:
    MOVLW 0XE2;
    MOVWF var_TMR0H;
    MOVLW 0X24;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_DO_SOSTENIDO:
    MOVLW 0XE3;
    MOVWF var_TMR0H;
    MOVLW 0XD0;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_RE:
    MOVLW 0XE5;
    MOVWF var_TMR0H;
    MOVLW 0X65;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_RE_SOSTENIDO:
    MOVLW 0XE6;
    MOVWF var_TMR0H;
    MOVLW 0XE4;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_MI:
    MOVLW 0XE8;
    MOVWF var_TMR0H;
    MOVLW 0X4D;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_FA:
    MOVLW 0XE9;
    MOVWF var_TMR0H;
    MOVLW 0XA1;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_FA_SOSTENIDO:
    MOVLW 0XEA;
    MOVWF var_TMR0H;
    MOVLW 0XE2;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_SOL:
    MOVLW 0XEC;
    MOVWF var_TMR0H;
    MOVLW 0X12;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_SOL_SOSTENIDO:
    MOVLW 0XED;
    MOVWF var_TMR0H;
    MOVLW 0X30;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_LA:
    MOVLW 0XEE;
    MOVWF var_TMR0H;
    MOVLW 0X3F;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_LA_SOSTENIDO:
    MOVLW 0XEF;
    MOVWF var_TMR0H;
    MOVLW 0X3E;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_SI:
    MOVLW 0XF0;
    MOVWF var_TMR0H;
    MOVLW 0X2E;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_DO_MAYOR:
    MOVLW 0XF1;
    MOVWF var_TMR0H;
    MOVLW 0X11;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_RE_MAYOR:
    MOVLW 0XF2;
    MOVWF var_TMR0H;
    MOVLW 0XB3;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_MI_MAYOR:
    MOVLW 0XF4;
    MOVWF var_TMR0H;
    MOVLW 0X26;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
NOTA_FA_MAYOR:
    MOVLW 0XF4;
    MOVWF var_TMR0H;
    MOVLW 0XF4D1;
    MOVWF var_TMR0L;
    CALL CONFIG_TIMERS;
RETURN
SONIDO:
    ;;CONFIGURACIÓN DEL PWM
    BTFSC ADCON0, 1
        GOTO SONIDO;
    BCF ADCON2, ADFM ;pasar parte alta
    MOVFF ADRESH, CCPR1L ;pasar parte baja
    BTFSS ADRESL, 6;
        BCF CCP1CON, 4;
    BTFSC ADRESL, 6;
        BSF CCP1CON, 4;
    BTFSS ADRESL, 7;
        BCF CCP1CON, 5;
    BTFSC ADRESL, 7;
        BSF CCP1CON, 5;
    BSF ADCON0, 1;
    ;; END CONFIGURACION DEL PWM
    ;;inicio PASAR LA SALIDA DE LA FRECUENCIA DEL PWM a la BOCINA
    BTFSC PORTA, 2;
        BSF LATA,1;
    BTFSS PORTA, 2;
        BCF LATA,1;
    ;;fin PASAR LA SALIDA DE LA FRECUENCIA DEL PWM a la BOCINA
    BTFSC PIR1, TMR1IF;
        CALL TIMER1;
    MOVLW 0X00;
    CPFSGT COUNTER
       RETURN
GOTO SONIDO;
TIMER0:
    BCF LATA,1; se apaga la salida
    MOVFF var_TMR0H, TMR0H;
    MOVFF var_TMR0L, TMR0L;
    BCF INTCON,2 ;LIMPIAR BANDERA
    ;; PARTE BAJA DE LA ONDA PERIODICA
    PWM_OFF: BTFSS INTCON,2
        GOTO PWM_OFF;
    MOVFF var_TMR0H, TMR0H;
    MOVFF var_TMR0L, TMR0L;
    BCF INTCON,2 ;LIMPIAR BANDERA
RETURN
TIMER1:
    DECF COUNTER, 1;
    MOVLW 0X15
    MOVWF TMR1H
    MOVLW 0XA0
    MOVWF TMR1L
    BCF PIR1, TMR1IF;
RETURN
WRITE_TEXT:
    DCFSNZ LCD_NO_VISIBLE;
        CALL LCD_2RENGLON;
    bsf PORTE,LCD_EN ; EN = 1
    bsf PORTE,LCD_RS ; RS = 1
    movwf PORTD;
    bcf PORTE,LCD_EN ; EN = 0
    call DELAY;
RETURN;
LCD_2RENGLON:
    MOVWF CHAR;
    bsf PORTE,LCD_EN ; EN = 1
    bcf PORTE,LCD_RS ; RS = 0
    MOVLW 0XC0;
    movwf PORTD;
    bcf PORTE,LCD_EN ; EN = 0
    call DELAY;
    MOVLW 0X12;
    MOVWF LCD_NO_VISIBLE;
    MOVF CHAR,0;
RETURN;
LCD_CLEAR:
    bsf PORTE,LCD_EN ; EN = 1
    bcf PORTE,LCD_RS ; RS = 0
    movlw 0x01 ; Clear screen
    movwf PORTD
    bcf PORTE,LCD_EN ; EN = 0
    MOVLW 0X60
    CALL WRITE_TEXT
    CALL DELAY
RETURN
delay2:
  MOVLW 0XFF
  MOVWF variable1
  MOVWF variable2
   loop1:
    decfsz variable2
        goto loop1
    decfsz variable1
        goto loop1
return
DELAY:
    CALL delay2;
;    CALL delay2;
;    CALL delay2;
return
delay500:
    CALL delay2;
    CALL delay2;
return
PRINT_GUION:
    MOVLW 0X2D
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_DO:
    MOVLW 0X44
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X6F
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_DO_SOSTENIDO:
    MOVLW 0X44
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X6F
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X23
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_RE:
    MOVLW 0X52
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X65
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_RE_SOSTENIDO:
    MOVLW 0X52
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X65
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X23
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_MI:
    MOVLW 0X4D
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X69
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_FA:
    MOVLW 0X46
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X61
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_FA_SOSTENIDO:
    MOVLW 0X46
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X61
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X23
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_SOL:
    MOVLW 0X53
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X6F
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X6C
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_SOL_SOSTENIDO:
    MOVLW 0X53
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X6F
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X6C
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X23
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_LA:
    MOVLW 0X4C
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X61
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_LA_SOSTENIDO:
    MOVLW 0X4C
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X61
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X23
    CALL WRITE_TEXT
    CALL DELAY
RETURN
PRINT_SI:
    MOVLW 0X53
    CALL WRITE_TEXT
    CALL DELAY
    MOVLW 0X69
    CALL WRITE_TEXT
    CALL DELAY
RETURN
ALEGRIA_SONG_1:
    CALL LCD_CLEAR;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_FA;
    CALL PRINT_GUION;
    CALL PRINT_SOL;
    CALL PRINT_GUION;
    CALL PRINT_SOL;
    CALL PRINT_GUION;
    CALL PRINT_FA;
    CALL PRINT_GUION;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_RE;
RETURN
ALEGRIA_SONG_2:
    CALL LCD_CLEAR;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_RE;
RETURN
ALEGRIA_SONG_3:
    CALL LCD_CLEAR;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_FA;
    CALL PRINT_GUION;
    CALL PRINT_SOL;
    CALL PRINT_GUION;
    CALL PRINT_SOL;
    CALL PRINT_GUION;
    CALL PRINT_FA;
    CALL PRINT_GUION;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_RE;
RETURN
ALEGRIA_SONG_4:
    CALL LCD_CLEAR;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_DO;
RETURN
ALEGRIA_SONG_5:
    CALL LCD_CLEAR;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_FA;
    CALL PRINT_GUION;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_FA;
RETURN
ALEGRIA_SONG_6:
    CALL LCD_CLEAR;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_SOL;
RETURN
ALEGRIA_SONG_7:
    CALL LCD_CLEAR;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_FA;
    CALL PRINT_GUION;
    CALL PRINT_SOL;
    CALL PRINT_GUION;
    CALL PRINT_SOL;
    CALL PRINT_GUION;
    CALL PRINT_FA;
    ;CALL PRINT_GUION;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_DO;
    CALL PRINT_GUION;
    CALL PRINT_RE;
RETURN
ALEGRIA_SONG_8:
    CALL LCD_CLEAR;
    CALL PRINT_MI;
    CALL PRINT_GUION;
    CALL PRINT_RE;
    CALL PRINT_GUION;
    CALL PRINT_DO;
RETURN

EPONA_SONG:
;MOVLW 0X4C
;CALL WRITE_TEXT
;CALL DELAY
;MOVLW 0X41
;CALL WRITE_TEXT
;CALL DELAY
;MOVLW 0X2D
;CALL WRITE_TEXT
;
;MOVLW 0X46
;CALL WRITE_TEXT
;CALL DELAY
;MOVLW 0X41
;CALL WRITE_TEXT
;CALL DELAY
;MOVLW 0X2D
;CALL WRITE_TEXT
;
;MOVLW 0X4D
;CALL WRITE_TEXT
;CALL DELAY
;MOVLW 0X49
;CALL WRITE_TEXT
;CALL DELAY
;MOVLW 0X2D
;CALL WRITE_TEXT
RETURN
END